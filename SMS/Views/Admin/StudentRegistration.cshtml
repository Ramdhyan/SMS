@model SMS.Models.StudentModel

@{
    ViewBag.Title = "StudentRegistration";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div>
    @{
        string code = (string)TempData["Code"];
        string remark = (string)TempData["Remark"];
        if (code != null || code != "")
        {
            if (code == "1")
            {

                <div class="alert alert-success">
                    <strong>Success !!</strong>@remark
                </div>
            }
            else
            {
                <div class="alert alert-danger">
                    <strong>Error !!</strong>@remark
                </div>
            }
        }
    }
</div>
@using (Html.BeginForm("StudentRegistration","Admin",FormMethod.Post,new { @enctype="multipart/form-data",@onsubmit="return Validate()"}))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <br />
    <h2>Student Registration</h2>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Session, new List<SelectListItem> { new SelectListItem { Text="2024-2025"} ,
                new SelectListItem { Text="2025-2026"} }, "Select", new { @class = "form-control" })
                    <span id="SessionError" class="text-danger"></span>
                    @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    <span id="NameError" class="text-danger"></span>

                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
   
   
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                    <span id="FathernameError" class="text-danger"></span>

                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                    <span id="MothernameError" class="text-danger"></span>

                    @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.ParentPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ParentPhone, new { htmlAttributes = new { @class = "form-control" } })
                <span id="ParentphoneError" class="text-danger"></span>

                @Html.ValidationMessageFor(model => model.ParentPhone, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control",@type="email" } })
                <span id="EmailError" class="text-danger"></span>

                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
  
   
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    <span id="MobileError" class="text-danger"></span>

                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                    <span id="GenderError" class="text-danger"></span>

                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
   
   
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ProfilePic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ProfilePic, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                    @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                    <span id="DobError" class="text-danger"></span>

                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
  <div class="row">
      <div class="col-md-6">
          <div class="form-group">
              @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-12">
                  @Html.DropDownListFor(model => model.State, new SelectList(ViewBag.State, "Value", "Text"), new { @class = "form-control" })
                  <span id="StateError" class="text-danger"></span>

                  @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
              </div>
          </div>
      </div>
      <div class="col-md-6">

          <div class="form-group">
              @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-12">
                  @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                  <span id="CityError" class="text-danger"></span>

                  @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
              </div>
          </div>
      </div>
  </div>
   
  <div class="row">
      <div class="col-md-6">
          <div class="form-group">
              @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-12">
                  @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                  <span id="PincodeError" class="text-danger"></span>

                  @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
              </div>
          </div>
      </div>
      <div class="col-md-6">
          <div class="form-group">
              @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-12">
                  @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                  <span id="AddressError" class="text-danger"></span>

                  @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
              </div>
          </div>
      </div>
  </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control" } })
                    <span id="ClassError" class="text-danger"></span>

                    @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.AadharNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.AadharNo, new { htmlAttributes = new { @class = "form-control" } })
                    <span id="AadharError" class="text-danger"></span>

                    @Html.ValidationMessageFor(model => model.AadharNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}


<script src="~/Content/js/jquery-3.3.1.min.js"></script>
<script>
    function Validate() {
        var Session = $("#Session").val();
        var name = $("#Name").val();
        var fathername = $("#FatherName").val();
        var ParentPhone = $("#ParentPhone").val();
        var Email = $("#Email").val();
        var mobile = $("#Mobile").val();
        var Gender = $("#Gender").val();
        var dob = $("#DOB").val();
        var city = $("#City").val();
        var state = $("#State").val();
        var pincode = $("#Pincode").val();
        var address = $("#Address").val();
        var Class = $("#Class").val();
        var aadharno = $("#AadharNo").val();
        if (Session == null || Session == "") {
            $("#SessionError").html("Please Select Session");
            return false;
        }
        if (name == null || name == "") {
            $("#NameError").html("Please Enter Name");
            return false;
        }
        if (fathername == null || fathername == "") {
            $("#FathernameError").html("Please Enter Father Name");
            return false;
        } if (Email == null || Email == "") {
            $("#EmailError").html("Please Enter email");
            return false;
        } if (ParentPhone == null || ParentPhone == "") {
            $("#ParentphoneError").html("Please Enter ParentPhone");
            return false;
        } if (mobile == null || mobile == "") {
            $("#MobileError").html("Please Enter mobile");
            return false;
        } if (Gender == null || Gender == "") {
            $("#GenderError").html("Please Enter Gender");
            return false;
        } if (dob == null || dob == "") {
            $("#DobError").html("Please Enter dob");
            return false;
        } if (city == null || city == "") {
            $("#CityError").html("Please Enter city");
            return false;
        } if (state == null || state == "") {
            $("#StateError").html("Please Enter state");
            return false;
        } if (pincode == null || pincode == "") {
            $("#PincodeError").html("Please Enter pincode");
            return false;
        } if (address == null || address == "") {
            $("#AddressError").html("Please Enter address");
            return false;
        } if (Class == null || Class == "") {
            $("#ClassError").html("Please Enter Class");
            return false;
        } if (aadharno == null || aadharno == "") {
            $("#AadharError").html("Please Enter aadharno");
            return false;
        }
        else {
            return true;
        }
    }
</script>